{"ast":null,"code":"var _jsxFileName = \"D:\\\\Trabajo\\\\CICESE\\\\frontend\\\\src\\\\dashboards\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  const [registros, setRegistros] = useState([]);\n  const [formData, setFormData] = useState({\n    nombre: '',\n    cvu: '',\n    instituto: '',\n    pais: '',\n    telefono: '',\n    correo: '',\n    tipoEstancia: '',\n    responsable: '',\n    proyecto: '',\n    justificacion: '',\n    fecha_inicio: '',\n    fecha_fin: '',\n    curp: '',\n    solicitud: 'no' // Por defecto, no se selecciona la solicitud de correo\n  });\n  const [modoEdicion, setModoEdicion] = useState(false);\n  const [idEditar, setIdEditar] = useState(null);\n  useEffect(() => {\n    cargarRegistros();\n  }, []);\n  const cargarRegistros = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/registros');\n      const data = await response.json();\n      setRegistros(data);\n    } catch (error) {\n      console.error('Error al cargar los registros:', error);\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      if (modoEdicion) {\n        await fetch(`http://localhost:8000/api/registros/${idEditar}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        });\n        setModoEdicion(false);\n        setIdEditar(null);\n      } else {\n        await fetch('http://localhost:8000/api/registros', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        });\n      }\n      cargarRegistros();\n      limpiarFormulario();\n    } catch (error) {\n      console.error('Error al guardar el formulario:', error);\n    }\n  };\n  const limpiarFormulario = () => {\n    setFormData({\n      nombre: '',\n      cvu: '',\n      instituto: '',\n      pais: '',\n      telefono: '',\n      correo: '',\n      tipoEstancia: '',\n      responsable: '',\n      proyecto: '',\n      justificacion: '',\n      fecha_inicio: '',\n      fecha_fin: '',\n      curp: '',\n      solicitud: 'no' // Reinicia la solicitud de correo a 'no'\n    });\n  };\n  const handleEditar = registro => {\n    setModoEdicion(true);\n    setIdEditar(registro.id);\n    setFormData({\n      nombre: registro.nombre,\n      cvu: registro.cvu,\n      instituto: registro.instituto,\n      pais: registro.pais,\n      telefono: registro.telefono,\n      correo: registro.correo,\n      tipoEstancia: registro.tipoEstancia,\n      responsable: registro.responsable,\n      proyecto: registro.proyecto,\n      justificacion: registro.justificacion,\n      fecha_inicio: registro.fecha_inicio,\n      fecha_fin: registro.fecha_fin,\n      curp: registro.curp,\n      solicitud: registro.solicitud\n    });\n  };\n  const handleEliminar = async id => {\n    try {\n      await fetch(`http://localhost:8000/api/registros/${id}`, {\n        method: 'DELETE'\n      });\n      cargarRegistros();\n    } catch (error) {\n      console.error('Error al eliminar el registro:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Administrador de Registros\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nombre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: formData.nombre,\n          onChange: e => setFormData({\n            ...formData,\n            nombre: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: modoEdicion ? 'Actualizar' : 'Agregar'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: registros.map(registro => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [registro.nombre, \" - \", registro.cvu, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditar(registro),\n          children: \"Editar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEliminar(registro.id),\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, registro.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"OqWbnzED9ajqfxX4f3FJLLXJGUs=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AdminDashboard","_s","registros","setRegistros","formData","setFormData","nombre","cvu","instituto","pais","telefono","correo","tipoEstancia","responsable","proyecto","justificacion","fecha_inicio","fecha_fin","curp","solicitud","modoEdicion","setModoEdicion","idEditar","setIdEditar","cargarRegistros","response","fetch","data","json","error","console","handleSubmit","event","preventDefault","method","headers","body","JSON","stringify","limpiarFormulario","handleEditar","registro","id","handleEliminar","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","map","onClick","_c","$RefreshReg$"],"sources":["D:/Trabajo/CICESE/frontend/src/dashboards/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction AdminDashboard() {\r\n  const [registros, setRegistros] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    nombre: '',\r\n    cvu: '',\r\n    instituto: '',\r\n    pais: '',\r\n    telefono: '',\r\n    correo: '',\r\n    tipoEstancia: '',\r\n    responsable: '',\r\n    proyecto: '',\r\n    justificacion: '',\r\n    fecha_inicio: '',\r\n    fecha_fin: '',\r\n    curp: '',\r\n    solicitud: 'no', // Por defecto, no se selecciona la solicitud de correo\r\n  });\r\n  const [modoEdicion, setModoEdicion] = useState(false);\r\n  const [idEditar, setIdEditar] = useState(null);\r\n\r\n  useEffect(() => {\r\n    cargarRegistros();\r\n  }, []);\r\n\r\n  const cargarRegistros = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/registros');\r\n      const data = await response.json();\r\n      setRegistros(data);\r\n    } catch (error) {\r\n      console.error('Error al cargar los registros:', error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      if (modoEdicion) {\r\n        await fetch(`http://localhost:8000/api/registros/${idEditar}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(formData),\r\n        });\r\n        setModoEdicion(false);\r\n        setIdEditar(null);\r\n      } else {\r\n        await fetch('http://localhost:8000/api/registros', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(formData),\r\n        });\r\n      }\r\n      cargarRegistros();\r\n      limpiarFormulario();\r\n    } catch (error) {\r\n      console.error('Error al guardar el formulario:', error);\r\n    }\r\n  };\r\n\r\n  const limpiarFormulario = () => {\r\n    setFormData({\r\n      nombre: '',\r\n      cvu: '',\r\n      instituto: '',\r\n      pais: '',\r\n      telefono: '',\r\n      correo: '',\r\n      tipoEstancia: '',\r\n      responsable: '',\r\n      proyecto: '',\r\n      justificacion: '',\r\n      fecha_inicio: '',\r\n      fecha_fin: '',\r\n      curp: '',\r\n      solicitud: 'no', // Reinicia la solicitud de correo a 'no'\r\n    });\r\n  };\r\n\r\n  const handleEditar = (registro) => {\r\n    setModoEdicion(true);\r\n    setIdEditar(registro.id);\r\n    setFormData({\r\n      nombre: registro.nombre,\r\n      cvu: registro.cvu,\r\n      instituto: registro.instituto,\r\n      pais: registro.pais,\r\n      telefono: registro.telefono,\r\n      correo: registro.correo,\r\n      tipoEstancia: registro.tipoEstancia,\r\n      responsable: registro.responsable,\r\n      proyecto: registro.proyecto,\r\n      justificacion: registro.justificacion,\r\n      fecha_inicio: registro.fecha_inicio,\r\n      fecha_fin: registro.fecha_fin,\r\n      curp: registro.curp,\r\n      solicitud: registro.solicitud,\r\n    });\r\n  };\r\n\r\n  const handleEliminar = async (id) => {\r\n    try {\r\n      await fetch(`http://localhost:8000/api/registros/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n      cargarRegistros();\r\n    } catch (error) {\r\n      console.error('Error al eliminar el registro:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Administrador de Registros</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Nombre:</label>\r\n          <input type=\"text\" value={formData.nombre} onChange={(e) => setFormData({ ...formData, nombre: e.target.value })} />\r\n        </div>\r\n        {/* Agrega los campos restantes del formulario de acuerdo a tus necesidades */}\r\n        <button type=\"submit\">{modoEdicion ? 'Actualizar' : 'Agregar'}</button>\r\n      </form>\r\n      <ul>\r\n        {registros.map((registro) => (\r\n          <li key={registro.id}>\r\n            {registro.nombre} - {registro.cvu} {/* Muestra los campos relevantes */}\r\n            <button onClick={() => handleEditar(registro)}>Editar</button>\r\n            <button onClick={() => handleEliminar(registro.id)}>Eliminar</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}