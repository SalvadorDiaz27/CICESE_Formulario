{"ast":null,"code":"var _jsxFileName = \"D:\\\\Trabajo\\\\CICESE\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Redirect } from 'react-router-dom';\nimport Home from './components/HomePage';\nimport Register from './components/RegisterPage';\nimport Login from './components/LoginPage';\nimport InvestigadorDashboard from './dashboards/InvestigadorDashboard';\nimport TecnicoDashboard from './dashboards/TecnicoDashboard';\nimport AdministrativoDashboard from './dashboards/AdministrativoDashboard';\nimport AdminDashboard from './dashboards/AdminDashboard';\nimport { AuthProvider, useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  component: Component,\n  allowedRoles,\n  ...rest\n}) => {\n  _s();\n  const {\n    auth\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => auth.token && allowedRoles.includes(parseInt(auth.role)) ? /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(ProtectedRoute, \"9G6mHm7vboz57TgCjHTTsyGOOp0=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          component: LoginPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/admin/dashboard\",\n          component: AdminDashboard,\n          allowedRoles: [1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/investigador/dashboard\",\n          component: InvestigadorDashboard,\n          allowedRoles: [2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/tecnico/dashboard\",\n          component: TecnicoDashboard,\n          allowedRoles: [3]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/administrativo/dashboard\",\n          component: AdministrativoDashboard,\n          allowedRoles: [4]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Redirect","Home","Register","Login","InvestigadorDashboard","TecnicoDashboard","AdministrativoDashboard","AdminDashboard","AuthProvider","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","component","Component","allowedRoles","rest","_s","auth","render","props","token","includes","parseInt","role","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","App","children","Switch","path","LoginPage","_c2","$RefreshReg$"],"sources":["D:/Trabajo/CICESE/frontend/src/App.js"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Redirect  } from 'react-router-dom';\nimport Home from './components/HomePage';\nimport Register from './components/RegisterPage';\nimport Login from './components/LoginPage';\nimport InvestigadorDashboard from './dashboards/InvestigadorDashboard';\nimport TecnicoDashboard from './dashboards/TecnicoDashboard';\nimport AdministrativoDashboard from './dashboards/AdministrativoDashboard';\nimport AdminDashboard from './dashboards/AdminDashboard';\nimport { AuthProvider, useAuth } from './AuthContext';\n\nconst ProtectedRoute = ({ component: Component, allowedRoles, ...rest }) => {\n  const { auth } = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        auth.token && allowedRoles.includes(parseInt(auth.role)) ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n};\n\nconst App = () => {\n  return (\n    <AuthProvider>\n      <Router>\n        <Switch>\n          <Route path=\"/login\" component={LoginPage} />\n          <ProtectedRoute path=\"/admin/dashboard\" component={AdminDashboard} allowedRoles={[1]} />\n          <ProtectedRoute path=\"/investigador/dashboard\" component={InvestigadorDashboard} allowedRoles={[2]} />\n          <ProtectedRoute path=\"/tecnico/dashboard\" component={TecnicoDashboard} allowedRoles={[3]} />\n          <ProtectedRoute path=\"/administrativo/dashboard\" component={AdministrativoDashboard} allowedRoles={[4]} />\n        </Switch>\n      </Router>\n    </AuthProvider>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}